apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  labels:
    app: server
spec:
  replicas: 1
  selector:
    matchLabels:
        app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      serviceAccountName: default
      volumes:
      - name: gs-credentials
        secret:
          secretName: gs-credentials
      containers:
      - name: api
        image: asia.gcr.io/django-project-368202/server
        ports:
        - containerPort: 8000
        command: ['gunicorn', 'app.wsgi:application', '-b', '0.0.0.0:8000']
        volumeMounts:
          - mountPath: /gs
            name: gs-credentials
        env:
        - name: STATIC_URL
          value: https://storage.googleapis.com/k8s-demo-scottman625-bucket/static/
        - name: POSTGRES_SERVICE_HOST
          value: 10.91.71.5
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
        #   value: postgres
          valueFrom:
            secretKeyRef:
              name: postgres
              key: POSTGRES_PASSWORD
        - name: GS_BUCKET_NAME
          value: k8s-demo-scottman625-bucket
        
      - name : cloud-sql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.28.0
        imagePullPolicy: Always
        
        command:
        - "/cloud_sql_proxy"

        # If connecting from a VPC-native GKE cluster, you can use the
        # following flag to have the proxy connect over private IP
        # - "-ip_address_types=PRIVATE"

        # By default, the proxy will write all logs to stderr. In some
        # environments, anything printed to stderr is consider an error. To
        # disable this behavior and write all logs to stdout (except errors
        # which will still go to stderr), use:
        - "-log_debug_stdout"

        # Replace DB_PORT with the port the proxy should listen on
        # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
        - "-instances=postgres=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "10Gi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu:    "4"
        
      #   # readinessProbe:
      #   #   httpGet:
      #   #     path: /health
      #   #     port: 8000
      #   #   initialDelaySeconds: 30
      #   #   periodSeconds: 30
        
        
        # - name: GS_BUCKET_NAME
        #   value: k8s-demo-scottman625-bucket
        
